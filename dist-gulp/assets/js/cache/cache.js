define(["app","entities/user"],function(e){return e.module("Cache",function(e,o,g,r,s,t){var n=e.Data={loggedUser:null},l={loggedUser:!1},d={fetchLoggedUser:function(e){if(l.loggedUser!==!1)return l.loggedUser;var r=s.Deferred(),t=r.promise();if(e||null===n.loggedUser){l.loggedUser=t;var d=o.request("loggedUser:entity");d.done(function(e){e&&e.has("id")?n.loggedUser instanceof g.Model?n.loggedUser.set(e.attributes):n.loggedUser=e:n.loggedUser=!1,r.resolve(n.loggedUser),l.loggedUser=!1}),d.fail(function(){r.reject()})}else r.resolve(n.loggedUser);return t},getLoggedUser:function(){return n.loggedUser},setLoggedUser:function(e){e=e instanceof g.Model?e:o.request("user:model:from:object",e),console.log("Cache: setting logged user: ",e),n.loggedUser instanceof g.Model?n.loggedUser.set(e.attributes):n.loggedUser=e},deleteLoggedUser:function(){n.loggedUser=!1}};o.on("login",function(e,o){console.info("Cache: Storing user after login: ",e),d.setLoggedUser(e)}),o.on("logout",function(){console.info("Cache: Deleting user after logout."),d.deleteLoggedUser()}),o.reqres.setHandler("cache:fetch:logged:user",function(e){return d.fetchLoggedUser(e)}),o.reqres.setHandler("cache:get:logged:user",function(){return d.getLoggedUser()}),o.commands.setHandler("cache:set:logged:user",function(e){d.setLoggedUser(e)}),o.commands.setHandler("cache:delete:logged:user",function(){d.deleteLoggedUser()})}),e.Cache});